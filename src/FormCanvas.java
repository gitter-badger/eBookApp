/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
import java.awt.Canvas;
import java.awt.Graphics;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import javax.imageio.ImageIO;
import javax.swing.*;
import javax.swing.border.BevelBorder;
import javax.swing.border.EmptyBorder;
import javax.swing.filechooser.FileNameExtensionFilter;
/**
 *
 * @author Jimmy
 */
public class FormCanvas extends javax.swing.JFrame {
    private static final long serialVersionUID = 1L;
    private JPanel contentPane;
    private BufferedImage image;
    private CanvasGambar canvasInput;
    /**
     * Creates new form FormCanvas
     */
    public FormCanvas() {
        
        
        setTitle("Image Processing");
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setBounds(100, 100, 416, 290);
        contentPane = new JPanel();
        contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));
        setContentPane(contentPane);
        contentPane.setLayout(null);
         
        JPanel panel = new JPanel();
        panel.setBorder(new BevelBorder(BevelBorder.LOWERED, null, null, null, null));
        panel.setBounds(10, 11, 223, 228);
         
        final CanvasGambar canvasInput = new CanvasGambar();
        canvasInput.setBounds(0, 0, 215, 215);  
         
        panel.add(canvasInput);
         
        contentPane.add(panel);
         
        JButton btnOpenImage = new JButton("Open Image");
        btnOpenImage.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent arg0) {
                openImage();
            }
        });
        btnOpenImage.setBounds(243, 11, 147, 36);
        contentPane.add(btnOpenImage);                  
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panel = new javax.swing.JPanel();
        btnOpenImage = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        panel.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        javax.swing.GroupLayout panelLayout = new javax.swing.GroupLayout(panel);
        panel.setLayout(panelLayout);
        panelLayout.setHorizontalGroup(
            panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 355, Short.MAX_VALUE)
        );
        panelLayout.setVerticalGroup(
            panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        btnOpenImage.setText("Open");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnOpenImage)
                .addContainerGap(74, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnOpenImage)
                        .addGap(0, 322, Short.MAX_VALUE))
                    .addComponent(panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormCanvas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormCanvas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormCanvas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormCanvas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                //new FormCanvas().setVisible(true);
                FormCanvas frame = new FormCanvas();
                frame.setVisible(true);
            }
        });
    }
    
    public class CanvasGambar extends Canvas {     
    /**
     * 
     */
    private static final long serialVersionUID = 1L;
        
    @Override
    public void paint(Graphics g) {
        if (image != null) {
            int imgWidth = image.getWidth(this);
            int imgHeight = image.getHeight(this);
              
            double imgAspect = (double) imgHeight / imgWidth;
      
            int canvasWidth = canvasInput.getWidth();
            int canvasHeight = canvasInput.getHeight();
              
            double canvasAspect = (double) canvasHeight / canvasWidth;
      
            int x1 = 0; // top left X position
            int y1 = 0; // top left Y position
            int x2 = 0; // bottom right X position
            int y2 = 0; // bottom right Y position
              
            if (imgWidth < canvasWidth && imgHeight < canvasHeight) {
                // the image is smaller than the canvas
                x1 = (canvasWidth - imgWidth)  / 2;
                y1 = (canvasHeight - imgHeight) / 2;
                x2 = imgWidth + x1;
                y2 = imgHeight + y1;
                  
            } else {
                if (canvasAspect > imgAspect) {
                    y1 = canvasHeight;
                    // keep image aspect ratio
                    canvasHeight = (int) (canvasWidth * imgAspect);
                    y1 = (y1 - canvasHeight) / 2;
                } else {
                    x1 = canvasWidth;
                    // keep image aspect ratio
                    canvasWidth = (int) (canvasHeight / imgAspect);
                    x1 = (x1 - canvasWidth) / 2;
                }
                x2 = canvasWidth + x1;
                y2 = canvasHeight + y1;
            }                      
            g.drawImage(image, x1, y1, x2, y2, 0, 0, imgWidth, imgHeight, null);
        }               
    }
    }
    
    private void openImage() {
    JFileChooser fc = new JFileChooser();
    fc.setFileFilter(new FileNameExtensionFilter("Image files", "jpg", "png", "gif", "bmp"));
    int returnVal = fc.showOpenDialog(panel);
 
    if (returnVal == JFileChooser.APPROVE_OPTION) {
        File file = fc.getSelectedFile();
         
        try {
            image = ImageIO.read(file);
            canvasInput.repaint();
        } catch (IOException e) {
            // TODO Auto-generated catch block
            e.printStackTrace();
        }                   
    } 
}   
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnOpenImage;
    private javax.swing.JPanel panel;
    // End of variables declaration//GEN-END:variables
}
